name: Deploy Astro to GitHub Pages (no-lockfile-safe)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Detecta dónde está el package.json (raíz o subcarpeta)
      - name: Detect project directory
        id: vars
        shell: bash
        run: |
          set -e
          DIR=$(dirname "$(git ls-files | grep -m1 '^.*package\.json$' || true)")
          if [ -z "$DIR" ] || [ "$DIR" = "." ]; then DIR="."; fi
          echo "dir=$DIR" >> "$GITHUB_OUTPUT"
          echo "Project dir: $DIR"

      - name: Setup Node (no cache to avoid lockfile error)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (smart)
        working-directory: ${{ steps.vars.outputs.dir }}
        shell: bash
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "Using npm ci (lockfile found)"
            npm ci
          else
            echo "Using npm install (no lockfile found)"
            npm install
          fi

      - name: Build
        working-directory: ${{ steps.vars.outputs.dir }}
        run: npm run build

      - name: Disable Jekyll
        working-directory: ${{ steps.vars.outputs.dir }}
        run: touch dist/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.vars.outputs.dir }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
